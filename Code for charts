### CV Insight Charts

# Set your working directory
setwd("D:/R")




## Softwares and tools skills - Scatter Plot ------------------------------------------------

library(ggplot2)
library(extrafont)


# Create your df manually. 
# Rating denotes the maximum score that you'll put overall 
# and the colour scale denotes the actual rating for each software

scatter_data <- data.frame(software = c(rep("R", 5),
                                        rep("Python", 5),
                                        rep("MySQL", 5),
                                        rep("Apache Spark", 5),
                                        rep("Excel", 5),
                                        rep("MongoDB", 5),
                                        rep("Tableau", 5)),
                           rating = rep(c(1:5), 7),
                           colour = c(rep("A", 5),
                                      c(rep("A", 4), "B"),
                                      c(rep("A", 3), rep("B", 2)),
                                      c(rep("A", 2), rep("B", 3)),
                                      rep("A", 5),
                                      c(rep("A", 2), rep("B", 3)), 
                                      c(rep("A", 3), rep("B", 2))))

# Reverse order of software so alphabetical
scatter_data$software <- factor(scatter_data$software,
                                levels=rev(levels(scatter_data$software)))

# Create plot. I used a theme that fit with my CV :)

g <- ggplot(scatter_data, aes(rating, software)) 
g <- g + geom_point(aes(colour = colour), size = 14)
g <- g + scale_x_continuous(limits = c(0.85,5.1))    
g <- g + scale_color_manual(values = c("#1485A4", "#8F9394"))     # Specify colours of points
g <- g + labs(x = NULL, y = NULL)                                 # Remove axis titles
g <- g + theme(panel.grid = element_blank())                      # Remove gridlines
g <- g + theme(axis.ticks = element_blank())                      # Remove tick marks
g <- g + theme(axis.text.x = element_blank())                     # Remove x-axis labels for
g <- g + theme(legend.position =  "none")                         # Remove Legend
g <- g + theme(text = element_text(size = 30, family = "Century Gothic")) # Customise font of text
g <- g + theme(plot.background = element_rect(fill = "#D1E7F6"))  # Change background colour of plot
g <- g + theme(panel.background = element_rect(fill = "#D1E7F6")) # Change background colour of panel


## Hard Skills - Polar Chart -----------------------------------------------

# This ones pretty simple but looks awesome

library(ggplot2)
library(dplyr)
library(extrafont)

# Create df - Do not change the y-number order, fit the skills in around the numbers. 
# For example I had Data Management as 2, QA as 3 etc. It's not a huge deal if you do, but I feel 
# the chart looks best when in this specific order. 

polar_data <- data.frame(x = c("Data\nManagement",
                               "Quality\nAssurance",
                               "Data\nVisualisation",
                               "Data\nAnalysis",
                               "Machine\nLearning"),
                         y = c(2,3,4,5,1))


# Create plot. Again, I used a specific them :) Also I had to manually fiddle with the text positioning
# as the automatic positions didn't look good. 

g <- ggplot(polar_data, aes(factor(x, levels = x), y))
g <- g + geom_bar(width = 0.95,stat = "identity", fill = "#1485A4", colour = "#FFFFFF")
g <- g + coord_polar()
g <- g + scale_y_continuous(limits = c(-3,7)) # Change the first number to alter how much space is in the middle
g <- g + annotate("text", x = 5, y = 5, label = "Machine\nLearning",   size = 7, family = "Century Gothic")
g <- g + annotate("text", x = 1, y = 5, label = "Data\nManagement",    size = 7, family = "Century Gothic")
g <- g + annotate("text", x = 2, y = 6, label = "Quality\nAssurance",  size = 7, family = "Century Gothic")
g <- g + annotate("text", x = 3, y = 6, label = "Data\nVisualisation", size = 7, family = "Century Gothic")
g <- g + annotate("text", x = 4, y = 7, label = "Data\nAnalysis",      size = 7, family = "Century Gothic")
g <- g + theme(panel.grid =  element_blank())
g <- g + theme(axis.text.y = element_blank())
g <- g + theme(axis.ticks =  element_blank())
g <- g + theme(axis.text.x = element_blank())
g <- g + theme(plot.background =  element_rect(fill = "#D1E7F6"))
g <- g + theme(panel.background = element_rect(fill = "#D1E7F6"))
g <- g + theme(legend.position = "none")



## Soft Skills - Word cloud ------------------------------------------------

library(xml2)
library(tm)
library(SnowballC)
library(wordcloud)
library(extrafont)

# Read the text file from internet
filePath <- "Words for Edward.txt"
text <- readLines(filePath)

# Convert 
docs <- Corpus(VectorSource(text))

# Remove unrecoginsable punctuation, replace with space
toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")

# Convert the text to lower case
docs <- tm_map(docs, content_transformer(tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove english common stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
# Remove your own stop word specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, c("blabla1", "blabla2")) 
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)

# Create term document matrix
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing = TRUE) # Arrange in order of decreasing freq
d <- data.frame(word = names(v),freq = v)
head(d, 10) # Check the top contributors

# PLot
set.seed(1230)

par(bg="#D1E7F6") # Make the background a specific colour

wordcloud(words = d$word, 
          freq = d$freq, 
          min.freq = 1, 
          random.order = FALSE, 
          rot.per = 0, 
          colors = c("#1485A4", "#1485A4", "#1485A4", "#1485A4", "#1485A4", "#1485A4"),
          family = "Century Gothic")


